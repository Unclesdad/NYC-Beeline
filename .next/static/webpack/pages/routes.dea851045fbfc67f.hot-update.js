"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/routes",{

/***/ "./src/components/AnimatedBackground.tsx":
/*!***********************************************!*\
  !*** ./src/components/AnimatedBackground.tsx ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nconst AnimatedBackground = (param)=>{\n    let { children, theme = \"honey\", intensity = \"medium\", pattern = \"hexagon\" } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Define theme colors with enhanced gradients\n    const themeColors = {\n        honey: {\n            primary: \"#f59e0b\",\n            secondary: \"#fbbf24\",\n            tertiary: \"#fcd34d\",\n            accent: \"#d97706\",\n            background: \"linear-gradient(135deg, #fffbeb 0%, #fef3c7 100%)\"\n        },\n        blue: {\n            primary: \"#3b82f6\",\n            secondary: \"#60a5fa\",\n            tertiary: \"#93c5fd\",\n            accent: \"#2563eb\",\n            background: \"linear-gradient(135deg, #eff6ff 0%, #dbeafe 100%)\"\n        },\n        green: {\n            primary: \"#10b981\",\n            secondary: \"#34d399\",\n            tertiary: \"#6ee7b7\",\n            accent: \"#059669\",\n            background: \"linear-gradient(135deg, #ecfdf5 0%, #d1fae5 100%)\"\n        }\n    };\n    // Set particle count based on intensity\n    const getParticleCount = ()=>{\n        switch(intensity){\n            case \"low\":\n                return 30;\n            case \"high\":\n                return 100;\n            default:\n                return 60; // medium\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        // Set canvas dimensions to match window\n        const setCanvasDimensions = ()=>{\n            canvas.width = window.innerWidth;\n            canvas.height = window.innerHeight;\n        };\n        setCanvasDimensions();\n        window.addEventListener(\"resize\", setCanvasDimensions);\n        // Create particles\n        const colors = themeColors[theme];\n        const particleColors = [\n            colors.primary,\n            colors.secondary,\n            colors.tertiary,\n            colors.accent\n        ];\n        const particles = [];\n        // Enhanced Particle class with improved animation\n        class Particle {\n            update() {\n                this.x += this.speedX;\n                this.y += this.speedY;\n                // Smooth pulsing effect\n                this.pulseFactor += this.pulseSpeed;\n                this.size = this.baseSize + Math.sin(this.pulseFactor) * 0.8;\n                // Bounce off edges with slight randomization\n                if (this.x + this.size > canvas.width || this.x - this.size < 0) {\n                    this.speedX = -this.speedX * (0.9 + Math.random() * 0.2);\n                    this.speedY += (Math.random() - 0.5) * 0.1; // Add slight randomness\n                }\n                if (this.y + this.size > canvas.height || this.y - this.size < 0) {\n                    this.speedY = -this.speedY * (0.9 + Math.random() * 0.2);\n                    this.speedX += (Math.random() - 0.5) * 0.1; // Add slight randomness\n                }\n                // Ensure particles don't slow down too much\n                const speed = Math.sqrt(this.speedX * this.speedX + this.speedY * this.speedY);\n                if (speed < 0.1) {\n                    const boost = 0.2 + Math.random() * 0.3;\n                    this.speedX = this.speedX / speed * boost;\n                    this.speedY = this.speedY / speed * boost;\n                }\n            }\n            draw() {\n                if (!ctx) return;\n                ctx.beginPath();\n                ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n                ctx.fillStyle = this.color;\n                ctx.globalAlpha = this.opacity;\n                ctx.fill();\n            }\n            constructor(){\n                this.x = Math.random() * canvas.width;\n                this.y = Math.random() * canvas.height;\n                this.baseSize = Math.random() * 5 + 2;\n                this.size = this.baseSize;\n                this.speedX = Math.random() * 1 - 0.5;\n                this.speedY = Math.random() * 1 - 0.5;\n                this.color = particleColors[Math.floor(Math.random() * particleColors.length)];\n                this.pulseFactor = 0;\n                this.pulseSpeed = Math.random() * 0.05 + 0.01;\n                this.opacity = Math.random() * 0.5 + 0.3;\n            }\n        }\n        // Initialize particles\n        const init = ()=>{\n            const particleCount = getParticleCount();\n            for(let i = 0; i < particleCount; i++){\n                particles.push(new Particle());\n            }\n        };\n        // Animate\n        const animate = ()=>{\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            // Draw background patterns based on selected pattern\n            if (pattern === \"hexagon\" && theme === \"honey\") {\n                drawHexagonPattern(ctx, canvas.width, canvas.height);\n            } else if (pattern === \"circles\") {\n                drawCirclePattern(ctx, canvas.width, canvas.height);\n            } else if (pattern === \"dots\") {\n                drawDotPattern(ctx, canvas.width, canvas.height);\n            }\n            // Update and draw particles\n            for(let i = 0; i < particles.length; i++){\n                particles[i].update();\n                particles[i].draw();\n                // Connect particles with lines if they're close\n                connectParticles(particles[i], particles);\n            }\n            requestAnimationFrame(animate);\n        };\n        // Connect particles with lines - enhanced version\n        const connectParticles = (particle, particles)=>{\n            const maxDistance = intensity === \"high\" ? 150 : intensity === \"medium\" ? 120 : 80;\n            for(let i = 0; i < particles.length; i++){\n                const dx = particle.x - particles[i].x;\n                const dy = particle.y - particles[i].y;\n                const distance = Math.sqrt(dx * dx + dy * dy);\n                if (distance < maxDistance) {\n                    // Create gradient lines for better visual effect\n                    const gradient = ctx.createLinearGradient(particle.x, particle.y, particles[i].x, particles[i].y);\n                    gradient.addColorStop(0, particle.color);\n                    gradient.addColorStop(1, particles[i].color);\n                    ctx.beginPath();\n                    ctx.strokeStyle = gradient;\n                    ctx.globalAlpha = 0.3 * (1 - distance / maxDistance);\n                    ctx.lineWidth = 0.8;\n                    ctx.moveTo(particle.x, particle.y);\n                    ctx.lineTo(particles[i].x, particles[i].y);\n                    ctx.stroke();\n                }\n            }\n        };\n        // Draw hexagon pattern for honey theme\n        const drawHexagonPattern = (ctx, width, height)=>{\n            const hexSize = 40;\n            const hexWidth = hexSize * 2;\n            const hexHeight = Math.sqrt(3) * hexSize;\n            ctx.strokeStyle = themeColors.honey.tertiary;\n            ctx.lineWidth = 0.5;\n            ctx.globalAlpha = 0.15;\n            for(let y = -hexHeight; y < height + hexHeight; y += hexHeight){\n                for(let x = -hexWidth; x < width + hexWidth; x += hexWidth * 1.5){\n                    // Draw hexagons in a staggered pattern\n                    const offsetY = Math.floor(x / (hexWidth * 1.5)) % 2 === 0 ? 0 : hexHeight / 2;\n                    drawHexagon(ctx, x, y + offsetY, hexSize);\n                }\n            }\n        };\n        // Draw circle pattern\n        const drawCirclePattern = (ctx, width, height)=>{\n            const circleRadius = 50;\n            const circleSpacing = 120;\n            ctx.strokeStyle = themeColors[theme].tertiary;\n            ctx.lineWidth = 0.5;\n            ctx.globalAlpha = 0.1;\n            for(let y = -circleRadius; y < height + circleRadius; y += circleSpacing){\n                for(let x = -circleRadius; x < width + circleRadius; x += circleSpacing){\n                    // Add some variance to circle positions\n                    const offsetX = Math.sin(y * 0.1) * 20;\n                    const offsetY = Math.cos(x * 0.1) * 20;\n                    ctx.beginPath();\n                    ctx.arc(x + offsetX, y + offsetY, circleRadius, 0, Math.PI * 2);\n                    ctx.stroke();\n                    // Add smaller inner circle\n                    ctx.beginPath();\n                    ctx.arc(x + offsetX, y + offsetY, circleRadius * 0.6, 0, Math.PI * 2);\n                    ctx.stroke();\n                }\n            }\n        };\n        // Draw dot pattern\n        const drawDotPattern = (ctx, width, height)=>{\n            const dotSpacing = 40;\n            const dotRadius = 1;\n            ctx.fillStyle = themeColors[theme].tertiary;\n            ctx.globalAlpha = 0.2;\n            for(let y = 0; y < height; y += dotSpacing){\n                for(let x = 0; x < width; x += dotSpacing){\n                    ctx.beginPath();\n                    ctx.arc(x, y, dotRadius, 0, Math.PI * 2);\n                    ctx.fill();\n                }\n            }\n        };\n        // Draw a single hexagon\n        const drawHexagon = (ctx, x, y, size)=>{\n            ctx.beginPath();\n            for(let i = 0; i < 6; i++){\n                const angle = 2 * Math.PI / 6 * i;\n                const xPos = x + size * Math.cos(angle);\n                const yPos = y + size * Math.sin(angle);\n                if (i === 0) {\n                    ctx.moveTo(xPos, yPos);\n                } else {\n                    ctx.lineTo(xPos, yPos);\n                }\n            }\n            ctx.closePath();\n            ctx.stroke();\n        };\n        init();\n        animate();\n        // Cleanup\n        return ()=>{\n            window.removeEventListener(\"resize\", setCanvasDimensions);\n        };\n    }, [\n        theme,\n        intensity,\n        pattern\n    ]);\n    // Get the background color based on theme\n    const getBackgroundStyle = ()=>{\n        const bgColor = theme === \"honey\" ? \"#fffbeb\" : theme === \"blue\" ? \"#eff6ff\" : \"#ecfdf5\";\n        // Use gradient for enhanced look\n        const gradient = themeColors[theme].background;\n        return {\n            background: gradient\n        };\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative min-h-screen overflow-hidden\",\n        style: getBackgroundStyle(),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: canvasRef,\n                className: \"absolute top-0 left-0 w-full h-full\",\n                style: {\n                    pointerEvents: \"none\"\n                }\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Aaron\\\\Documents\\\\NYC-Beeline\\\\src\\\\components\\\\AnimatedBackground.tsx\",\n                lineNumber: 306,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative z-10\",\n                children: children\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Aaron\\\\Documents\\\\NYC-Beeline\\\\src\\\\components\\\\AnimatedBackground.tsx\",\n                lineNumber: 311,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Aaron\\\\Documents\\\\NYC-Beeline\\\\src\\\\components\\\\AnimatedBackground.tsx\",\n        lineNumber: 305,\n        columnNumber: 5\n    }, undefined);\n};\n_s(AnimatedBackground, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = AnimatedBackground;\n/* harmony default export */ __webpack_exports__[\"default\"] = (AnimatedBackground);\nvar _c;\n$RefreshReg$(_c, \"AnimatedBackground\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/AnimatedBackground.tsx\n"));

/***/ })

});